
#include <communication_pkg/PWMAction.h>
#include <actionlib/server/simple_action_server.h>
#include <unistd.h>
#include <string.h>


// Socket address
#define HOST '192.168.0.42'
#define PORT 8888

char pwm_values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
int distance_U = 0;
int accel_X = 0;
int accel_Y = 0;
int accel_Z = 0;
int gyro_X = 0;
int gyro_Y = 0;
int gyro_Z = 0;

typedef actionlib::SimpleActionServer<communication_pkg::PWMAction> Server;

void execute(const communication_pkg::PWMGoalConstPtr& goal, Server* as)
{
	char aux[100];
	// Do lots of awesome groundbreaking robot stuff here
	as->setSucceeded();
	
	//sprintf(aux,"goal 1:%d, goal 12:%d\n",(*goal).pwm[0],(*goal).pwm[11]);
	sprintf(aux,"/arduino/pwm service callback executed");
	write(1,aux,strlen(aux));
}

int main(int argc, char** argv)
{
	char aux[100];

	ros::init(argc, argv, "do_dishes_server");
	ros::NodeHandle h;

	Server server(h, "/arduino/pwm", boost::bind(&execute, _1, &server), false);
	server.start();
	sprintf(aux,"Action /arduino/pwm launched");
	write(1,aux,strlen(aux));
	

	ros::spin();
	return 0;
}
